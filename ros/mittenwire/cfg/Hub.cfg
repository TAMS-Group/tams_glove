#!/usr/bin/env python3

PACKAGE = "mittenwire"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

mode_enum = gen.enum([ 
    gen.const("video", int_t, 0, "Video"),
    gen.const("photo", int_t, 1, "Photo"),
    gen.const("zoom", int_t, 2, "Zoom"),
    ], "Default camera mode")

type_enum = gen.enum([ 
    gen.const("None", int_t, 0, "No sensor"),
    gen.const("Camera", int_t, 1, "Camera module"),
    gen.const("Tactile", int_t, 2, "Tactile sensor or glove"),
    ], "Type of sensor connected to a hub port")

for group_name in ["video", "zoom", "photo"]:
    group = gen.add_group("mode_"+group_name)
    group.add(group_name+"_framerate", double_t, 0, "Frame Rate", 10, 0, 200)
    group.add(group_name+"_delay", double_t, 0, "Delay", 0, 0, 1.0)
    group.add(group_name+"_width", int_t, 0, "Width", 1920, 0, 2592)
    group.add(group_name+"_height", int_t, 0, "Height", 1080, 0, 1944)
    group.add(group_name+"_skip", int_t, 0, "Skip", 1, 1, 7)
    group.add(group_name+"_binning", int_t, 0, "Binning", 1, 1, 4)

group = gen.add_group("settings")
group.add("exposure", int_t, 0, "Exposure", 401, 0, 65535)
group.add("analog_gain_red", int_t, 0, "Analog Gain Red", 32, 1, 32)
group.add("analog_gain_green", int_t, 0, "Analog Gain Green", 32, 1, 32)
group.add("analog_gain_blue", int_t, 0, "Analog Gain Blue", 32, 1, 32)
group.add("double_gain", bool_t, 0, "Double Gain", False)
group.add("digital_gain", int_t, 0, "Digital Gain", 1, 1, 16)
group.add("blacklevel", double_t, 0, "Black Level", 0, 0, 1)
group.add("mode", int_t, 0, "Default camera mode", 0, 0, 2, edit_method=mode_enum)

group = gen.add_group("filter")
group.add("invert", bool_t, 0, "Invert", False)
group.add("hue", int_t, 0, "Hue", 0, -360, 360)
group.add("saturation", int_t, 0, "Saturation", 100, 0, 500)
group.add("brightness", int_t, 0, "Brightness", 100, 0, 500)
group.add("median_blur", int_t, 0, "Median Blur", 0, 0, 7)
group.add("tone_mapping", bool_t, 0, "Tone Mapping", False)
group.add("enable_filters", bool_t, 0, "Enable Filters", True)

group = gen.add_group("ports")
for i in range(8):
    group.add("port_"+str(i), int_t, 0, "Type of sensor connected to the hub port", 0, 0, 2, edit_method=type_enum)

exit(gen.generate(PACKAGE, "mittenwire", "Hub"))
